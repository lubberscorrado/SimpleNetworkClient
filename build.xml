<?xml version="1.0" encoding="UTF-8"?>
<project name="Simple Network Client">

	<property name="ant" value="ant" />
	<property name="src" value="src" />
	<property name="build" value="build" />
	<property name="deploy" value="deploy" />
	<property name="deploy.jar" value="${deploy}/jar" />
	<property name="deploy.doc" value="${deploy}/doc" />

	<property name="target.java" value="1.6" />

	<property name="target.java.7" value="1.7" />

	<!-- android-framework using same -->
	<property name="target.android" value="1.6" />

	<property name="jar.commons" value="kcommons" />
	<property name="jar.commons.json" value="kcommons-ext-json" />
	<property name="jar.commons.htmlcleaner" value="kcommons-ext-htmlcleaner" />
	<property name="jar.snc" value="snc" />
	<property name="jar.sen" value="snc-sen" />
	<property name="jar.sen.psn" value="snc-sen-psn" />
	<property name="jar.sen.psn.us" value="snc-sen-psn-us" />
	<property file="${ant}/build.properties" />

	<property name="tools" value="tools" />

	<!-- Dependencies for all builds -->
	<path id="classpath.dependencies">
		<fileset dir="dependencies">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Dependencies for Java 7 -->
	<path id="classpath.dependencies.java.7">
		<path refid="classpath.dependencies" />
		<pathelement location="${build}/java" />
	</path>

	<!-- Dependencies for Android. Needs android.jar in private folder -->
	<path id="classpath.dependencies.android">
		<filelist dir="dependencies/private" files="android.jar" />
		<path refid="classpath.dependencies" />
		<pathelement location="${build}/java" />
	</path>


	<!-- Dependencies for Android Framework. Needs android-core.jar and 
	android-framework.jar in private folder. -->
	<path id="classpath.dependencies.android.framework">
		<filelist dir="dependencies/private" files="android-core.jar,android-framework.jar" />
		<path refid="classpath.dependencies" />
		<pathelement location="${build}/java" />
	</path>

	<target name="build-all" description="Builds whole project" depends="build-java,build-java-7,build-android,build-android-framework">

	</target>

	<target name="build-java" description="Builds whole project">
		<compilecode source="java" />
	</target>

	<target name="build-java-7" description="Builds whole project">
		<compilecode source="java-7" target="${target.java.7}" classpath="classpath.dependencies.java.7" />
	</target>

	<target name="build-android" description="Builds whole project">
		<compilecode source="java" />
		<compilecode source="android" target="${target.android}" classpath="classpath.dependencies.android" />
	</target>

	<target name="build-android-framework" description="Builds whole project">
		<compilecode source="java" />
		<compilecode source="android-framework" target="${target.android}" classpath="classpath.dependencies.android.framework" />
	</target>


	<macrodef name="compilecode">
		<attribute name="source" />
		<attribute name="target" default="${target.java}" />
		<attribute name="classpath" default="classpath.dependencies" />
		<sequential>
			<!-- clear old build -->
			<delete dir="${build}/@{source}" />
			<mkdir dir="${build}/@{source}" />
			<javac srcdir="${src}/@{source}" destdir="${build}/@{source}" source="@{target}" target="@{target}">
				<!-- needed for restricted api's -->
				<compilerarg line="-XDignore.symbol.file" />
				<classpath refid="@{classpath}" />
				<exclude name="test/**" />
			</javac>
		</sequential>
	</macrodef>

	<target name="make-jar-all" description="Build all jars" depends="make-jar-java,make-jar-java-7,make-jar-android,make-jar-android-framework">
	</target>

	<target name="make-jar-java" description="Build Java jars">
		<!-- Normal jars(Java) -->
		<make.jar name="${jar.commons}" version="${version.commons}" include="commons" exclude="commons" />
		<make.jar name="${jar.snc}" version="${version.snc}" include="snc" exclude="snc" />
		<make.jar name="${jar.commons.json}" version="${version.commons.json}" include="commons-json" />
		<make.jar name="${jar.commons.htmlcleaner}" version="${version.commons.htmlcleaner}" include="commons-htmlcleaner" />
		<make.jar name="${jar.sen}" version="${version.sen}" include="sen" exclude="sen" />
		<make.jar name="${jar.sen.psn}" version="${version.sen.psn}" include="sen-psn" exclude="sen-psn" />
		<make.jar name="${jar.sen.psn.us}" version="${version.sen.psn.us}" include="sen-psn-us" />
	</target>

	<target name="make-jar-java-7" description="Build Java-7 jars">
		<!-- Java 7 -->
		<make.jar.copy name="${jar.commons}" version="${version.commons}" source="java-7" include="commons" exclude="commons" />
		<make.jar.copy name="${jar.commons.json}" version="${version.commons.json}" source="java-7" include="commons-json" />
		<make.jar.copy name="${jar.snc}" version="${version.snc}" source="java-7" include="snc" exclude="snc" />
		<make.jar.copy name="${jar.sen.psn}" version="${version.sen.psn}" source="java-7" include="sen-psn" exclude="sen-psn" />
		<make.jar.copy name="${jar.sen.psn.us}" version="${version.sen.psn.us}" source="java-7" include="sen-psn-us" />
	</target>

	<target name="make-jar-android" description="Build Android jars">
		<!-- Android -->
		<make.jar.copy name="${jar.commons}" version="${version.commons}" source="android" include="commons" exclude="commons" />
	</target>

	<target name="make-jar-android-framework" description="Build Android-Framework jars">
		<!-- Android Framework -->
		<make.jar.copy name="${jar.commons}" version="${version.commons}" source="android-framework" include="commons" exclude="commons" />
	</target>

	<macrodef name="make.jar">
		<attribute name="name" description="Name of jar file" />
		<attribute name="version" description="Version of jar file" />
		<attribute name="include" default="default" description="Optional include file. 'include-[@include].txt" />
		<attribute name="exclude" default="default" description="Optional exclude file. 'exclude-[@exclude].txt" />
		<sequential>
			<jar destfile="${deploy.jar}/@{name}-@{version}.jar" basedir="${build}/java" includesfile="${ant}/include-@{include}.txt" excludesfile="${ant}/exclude-@{exclude}.txt" />
		</sequential>
	</macrodef>

	<macrodef name="make.jar.copy">
		<attribute name="name" description="Name of jar file" />
		<attribute name="version" description="Version of jar file" />
		<attribute name="source" description="Source(build) folder name" />
		<attribute name="include" default="default" description="Optional include file. 'include-[@include].txt" />
		<attribute name="exclude" default="default" description="Optional exclude file. 'exclude-[@exclude].txt" />
		<sequential>
			<!-- copy and replace new classes -->
			<tempfile property="temp.dir" destdir="${java.io.tmpdir}" prefix="antbuild" />
			<copy todir="${temp.dir}">
				<fileset dir="${build}/java" includesfile="${ant}/include-@{include}.txt" excludesfile="${ant}/exclude-@{exclude}.txt" />
			</copy>
			<copy todir="${temp.dir}" overwrite="true">
				<fileset dir="${build}/@{source}" includesfile="${ant}/include-@{include}.txt" excludesfile="${ant}/exclude-@{exclude}.txt" />
			</copy>

			<jar destfile="${deploy.jar}/@{source}/@{name}-@{version}.jar" basedir="${temp.dir}" />

		</sequential>
	</macrodef>


	<target name="clean" description="Cleans project: build and deploy">
		<delete dir="${build}" />
		<delete dir="${deploy}" />
	</target>

	<target name="javadoc" description="Create deploy Javadocs">
		<delete dir="${deploy.doc}" />
		<mkdir dir="${deploy.doc}" />
		<javadoc destdir="${deploy.doc}" classpathref="classpath.dependencies" author="false" windowtitle="Overview (SNC)">
			<fileset dir="${src}/java">
				<exclude name="test/**" />
				<exclude name="**/internal/**" />
			</fileset>
			<tag name="beta" scope="all" description="Beta:" />
			<bottom>${javadoc.bottom}</bottom>
			<link />
			<link href="http://docs.oracle.com/javase/7/docs/api/" />
			<link href="http://www.slf4j.org/apidocs/" />
			<link href="http://fasterxml.github.com/jackson-core/javadoc/2.1.0/" />
			<link href="http://htmlcleaner.sourceforge.net/doc/" />
		</javadoc>
	</target>

	<!-- all in one target -->
	<target name="deploy" description="Clean project, Build sources, Javadoc, and make jars" depends="clean,build-all,javadoc,make-jar-all" />

	<!--<target name="make-tools" depends="build" description="Build and deploy tools">
		<delete dir="${tools}/build" />
		<mkdir dir="${tools}/build" />
		<javac srcdir="${tools}/src" destdir="${tools}/build" source="1.7" target="1.7">
			<classpath refid="classpath.build" />
		</javac>
		<jar destfile="${tools}/chromehar.jar">
			<fileset dir="${tools}/build" />
			<fileset dir="${build}/java" includes="com/krobothsoftware/commons/**" />
			<zipgroupfileset dir="dependencies" includesfile="${ant}/include-jar-tools-chromehar.txt" />
			<manifest>
				<attribute name="Main-Class" value="com.krobothsoftware.tool.chrome.HarExport" />
			</manifest>
		</jar>
	</target> -->



</project>
